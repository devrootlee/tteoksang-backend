plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example.tteoksang.backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    //Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //PostgreSQL
    implementation 'org.postgresql:postgresql:42.7.3' // 최신 버전은 확인 필요

    //logging
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'

//    //Spring Boot Security(JWT 인증용)
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    // JJWT (JWT 생성 및 검증)
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' //JSON 직렬화 지원

    //Lombok(코드 간소화)
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    //monitoring
//    implementation 'org.springframework.boot:spring-boot-starter-actuator' //actuator
//    implementation 'io.micrometer:micrometer-registry-prometheus' //prometheus

    //webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = 'tteoksang-backend.jar'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main {
        java {
            srcDirs += [querydslDir]
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}